#! /usr/bin/env node
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
const commander_1 = require("commander");
const packInfo = require("../package.json");
const _1 = require("./");
const utils_1 = require("./utils");
const noArgv = !process.argv.slice(2).length;
const oldParseArgs = commander_1.Command.prototype.parseArgs;
commander_1.Command.prototype.parseArgs = function (args, unknown) {
    return noArgv ? this : oldParseArgs.call(this, args, unknown);
};
const program = new commander_1.Command();
program
    .version(packInfo.version, '-v, --version')
    .usage('[commands] [options]')
    .option('-w, --watch', 'Watching files, d.ts would recreated while file changed')
    .option('-c, --cwd [path]', 'Egg application base dir (default: process.cwd)')
    .option('-C, --config [path]', 'Configuration file, The argument can be a file path to a valid JSON/JS configuration file.ï¼ˆdefault: {cwd}/tshelper.js')
    .option('-f, --framework [name]', 'Egg framework(default: egg)')
    .option('-s, --silent', 'Running without output')
    .option('-i, --ignore [dirs]', 'Ignore watchDirs, your can ignore multiple dirs with comma like: -i controller,service')
    .option('-e, --enabled [dirs]', 'Enable watchDirs, your can enable multiple dirs with comma like: -e proxy,other')
    .option('-E, --extra [json]', 'Extra config, the value should be json string');
let cmd;
program
    .command('clean', 'Clean js file while it has the same name ts file')
    .action(command => cmd = command);
program.parse(process.argv);
// clean js file.
const cwd = program.cwd || _1.defaultConfig.cwd;
if (cmd === 'clean') {
    utils_1.cleanJs(cwd);
    process.exit(0);
}
const watchFiles = program.watch;
const watchDirs = {};
(program.ignore || '').split(',').forEach(key => (watchDirs[key] = false));
(program.enabled || '').split(',').forEach(key => (watchDirs[key] = true));
// extra config
const extraConfig = program.extra ? JSON.parse(program.extra) : {};
// create instance
_1.createTsHelperInstance(Object.assign({ cwd, framework: program.framework, watch: watchFiles, watchDirs, configFile: program.config }, extraConfig))
    .on('update', p => {
    if (!program.silent) {
        console.info(`[${packInfo.name}] ${p} created`);
    }
})
    .build();
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiYmluLmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiLi4vc3JjL2Jpbi50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOzs7QUFFQSx5Q0FBb0M7QUFDcEMsNENBQTRDO0FBQzVDLHlCQUEyRDtBQUMzRCxtQ0FBa0M7QUFFbEMsTUFBTSxNQUFNLEdBQUcsQ0FBQyxPQUFPLENBQUMsSUFBSSxDQUFDLEtBQUssQ0FBQyxDQUFDLENBQUMsQ0FBQyxNQUFNLENBQUM7QUFDN0MsTUFBTSxZQUFZLEdBQUcsbUJBQU8sQ0FBQyxTQUFTLENBQUMsU0FBUyxDQUFDO0FBQ2pELG1CQUFPLENBQUMsU0FBUyxDQUFDLFNBQVMsR0FBRyxVQUFTLElBQWMsRUFBRSxPQUFPO0lBQzVELE9BQU8sTUFBTSxDQUFDLENBQUMsQ0FBQyxJQUFJLENBQUMsQ0FBQyxDQUFDLFlBQVksQ0FBQyxJQUFJLENBQUMsSUFBSSxFQUFFLElBQUksRUFBRSxPQUFPLENBQUMsQ0FBQztBQUNoRSxDQUFDLENBQUM7QUFFRixNQUFNLE9BQU8sR0FBRyxJQUFJLG1CQUFPLEVBQUUsQ0FBQztBQUU5QixPQUFPO0tBQ0osT0FBTyxDQUFDLFFBQVEsQ0FBQyxPQUFPLEVBQUUsZUFBZSxDQUFDO0tBQzFDLEtBQUssQ0FBQyxzQkFBc0IsQ0FBQztLQUM3QixNQUFNLENBQUMsYUFBYSxFQUFFLHlEQUF5RCxDQUFDO0tBQ2hGLE1BQU0sQ0FBQyxrQkFBa0IsRUFBRSxpREFBaUQsQ0FBQztLQUM3RSxNQUFNLENBQUMscUJBQXFCLEVBQUUsdUhBQXVILENBQUM7S0FDdEosTUFBTSxDQUFDLHdCQUF3QixFQUFFLDZCQUE2QixDQUFDO0tBQy9ELE1BQU0sQ0FBQyxjQUFjLEVBQUUsd0JBQXdCLENBQUM7S0FDaEQsTUFBTSxDQUFDLHFCQUFxQixFQUFFLHdGQUF3RixDQUFDO0tBQ3ZILE1BQU0sQ0FBQyxzQkFBc0IsRUFBRSxpRkFBaUYsQ0FBQztLQUNqSCxNQUFNLENBQUMsb0JBQW9CLEVBQUUsK0NBQStDLENBQUMsQ0FBQztBQUVqRixJQUFJLEdBQXVCLENBQUM7QUFDNUIsT0FBTztLQUNKLE9BQU8sQ0FBQyxPQUFPLEVBQUUsa0RBQWtELENBQUM7S0FDcEUsTUFBTSxDQUFDLE9BQU8sQ0FBQyxFQUFFLENBQUMsR0FBRyxHQUFHLE9BQU8sQ0FBQyxDQUFDO0FBRXBDLE9BQU8sQ0FBQyxLQUFLLENBQUMsT0FBTyxDQUFDLElBQUksQ0FBQyxDQUFDO0FBRTVCLGlCQUFpQjtBQUNqQixNQUFNLEdBQUcsR0FBRyxPQUFPLENBQUMsR0FBRyxJQUFJLGdCQUFhLENBQUMsR0FBRyxDQUFDO0FBQzdDLElBQUksR0FBRyxLQUFLLE9BQU8sRUFBRTtJQUNuQixlQUFPLENBQUMsR0FBRyxDQUFDLENBQUM7SUFDYixPQUFPLENBQUMsSUFBSSxDQUFDLENBQUMsQ0FBQyxDQUFDO0NBQ2pCO0FBRUQsTUFBTSxVQUFVLEdBQUcsT0FBTyxDQUFDLEtBQUssQ0FBQztBQUNqQyxNQUFNLFNBQVMsR0FBRyxFQUFFLENBQUM7QUFDckIsQ0FBQyxPQUFPLENBQUMsTUFBTSxJQUFJLEVBQUUsQ0FBQyxDQUFDLEtBQUssQ0FBQyxHQUFHLENBQUMsQ0FBQyxPQUFPLENBQUMsR0FBRyxDQUFDLEVBQUUsQ0FBQyxDQUFDLFNBQVMsQ0FBQyxHQUFHLENBQUMsR0FBRyxLQUFLLENBQUMsQ0FBQyxDQUFDO0FBQzNFLENBQUMsT0FBTyxDQUFDLE9BQU8sSUFBSSxFQUFFLENBQUMsQ0FBQyxLQUFLLENBQUMsR0FBRyxDQUFDLENBQUMsT0FBTyxDQUFDLEdBQUcsQ0FBQyxFQUFFLENBQUMsQ0FBQyxTQUFTLENBQUMsR0FBRyxDQUFDLEdBQUcsSUFBSSxDQUFDLENBQUMsQ0FBQztBQUUzRSxlQUFlO0FBQ2YsTUFBTSxXQUFXLEdBQUcsT0FBTyxDQUFDLEtBQUssQ0FBQyxDQUFDLENBQUMsSUFBSSxDQUFDLEtBQUssQ0FBQyxPQUFPLENBQUMsS0FBSyxDQUFDLENBQUMsQ0FBQyxDQUFDLEVBQUUsQ0FBQztBQUVuRSxrQkFBa0I7QUFDbEIseUJBQXNCLGlCQUNwQixHQUFHLEVBQ0gsU0FBUyxFQUFFLE9BQU8sQ0FBQyxTQUFTLEVBQzVCLEtBQUssRUFBRSxVQUFVLEVBQ2pCLFNBQVMsRUFDVCxVQUFVLEVBQUUsT0FBTyxDQUFDLE1BQU0sSUFDdkIsV0FBVyxFQUNkO0tBQ0MsRUFBRSxDQUFDLFFBQVEsRUFBRSxDQUFDLENBQUMsRUFBRTtJQUNoQixJQUFJLENBQUMsT0FBTyxDQUFDLE1BQU0sRUFBRTtRQUNuQixPQUFPLENBQUMsSUFBSSxDQUFDLElBQUksUUFBUSxDQUFDLElBQUksS0FBSyxDQUFDLFVBQVUsQ0FBQyxDQUFDO0tBQ2pEO0FBQ0gsQ0FBQyxDQUFDO0tBQ0QsS0FBSyxFQUFFLENBQUMifQ==