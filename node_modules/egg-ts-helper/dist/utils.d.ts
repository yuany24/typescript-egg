import * as ts from 'typescript';
export declare function loadFiles(cwd: string, pattern?: string): string[];
export declare function cleanJs(cwd: string): void;
export declare function getModuleObjByPath(f: string): {
    props: string[];
    moduleName: string;
};
export declare function removeSameNameJs(f: string): string | undefined;
export declare function getSourceFile(f: string): ts.SourceFile | undefined;
export declare function isModuleExports(node: ts.Node): boolean;
export declare function modifierHas(node: ts.Node, kind: any): ts.Token<ts.SyntaxKind.AbstractKeyword> | ts.Token<ts.SyntaxKind.AsyncKeyword> | ts.Token<ts.SyntaxKind.ConstKeyword> | ts.Token<ts.SyntaxKind.DeclareKeyword> | ts.Token<ts.SyntaxKind.DefaultKeyword> | ts.Token<ts.SyntaxKind.ExportKeyword> | ts.Token<ts.SyntaxKind.PublicKeyword> | ts.Token<ts.SyntaxKind.PrivateKeyword> | ts.Token<ts.SyntaxKind.ProtectedKeyword> | ts.Token<ts.SyntaxKind.ReadonlyKeyword> | ts.Token<ts.SyntaxKind.StaticKeyword> | undefined;
export declare function eachSourceFile(node: ts.Node, cb: (n: ts.Node) => any): void;
export declare function requireFile(url: any): any;
