"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
const d = require("debug");
const fs = require("fs");
const path = require("path");
const utils = require("../utils");
const debug = d('egg-ts-helper#generators_plugin');
const cache = {};
const pluginRegex = /package\:\s*(?:'|")([^'"]+)(?:'|")/;
function default_1(tsHelper) {
    tsHelper.register('plugin', (config, baseConfig) => {
        const fileList = utils.loadFiles(config.dir, config.pattern);
        const dist = path.resolve(config.dtsDir, 'plugin.d.ts');
        if (!fileList.length) {
            return { dist };
        }
        let importList = [];
        fileList.forEach(f => {
            const abUrl = path.resolve(config.dir, f);
            // read from cache
            if (!cache[abUrl] || config.file === abUrl) {
                let fileContent = fs.readFileSync(abUrl).toString();
                let matches;
                const list = (cache[abUrl] = []);
                while ((matches = fileContent.match(pluginRegex))) {
                    const packageName = matches[1];
                    const packagePath = path.resolve(baseConfig.cwd, 'node_modules/' + packageName);
                    if (fs.existsSync(packagePath)) {
                        list.push(packageName);
                        importList.push(packageName);
                    }
                    else {
                        debug('package \'%s\' not found in %s', packageName, baseConfig.cwd);
                        return;
                    }
                    fileContent = fileContent.substring(matches.index + matches[0].length);
                }
            }
            else {
                importList = importList.concat(cache[abUrl]);
            }
        });
        if (!importList.length) {
            return { dist };
        }
        return {
            dist,
            // remove duplicate before map
            content: Array.from(new Set(importList))
                .map(p => `import '${p}';`)
                .join('\n'),
        };
    });
}
exports.default = default_1;
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoicGx1Z2luLmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiLi4vLi4vc3JjL2dlbmVyYXRvcnMvcGx1Z2luLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7O0FBQUEsMkJBQTJCO0FBQzNCLHlCQUF5QjtBQUN6Qiw2QkFBNkI7QUFFN0Isa0NBQWtDO0FBQ2xDLE1BQU0sS0FBSyxHQUFHLENBQUMsQ0FBQyxpQ0FBaUMsQ0FBQyxDQUFDO0FBRW5ELE1BQU0sS0FBSyxHQUFnQyxFQUFFLENBQUM7QUFDOUMsTUFBTSxXQUFXLEdBQUcsb0NBQW9DLENBQUM7QUFFekQsbUJBQXdCLFFBQWtCO0lBQ3hDLFFBQVEsQ0FBQyxRQUFRLENBQUMsUUFBUSxFQUFFLENBQUMsTUFBTSxFQUFFLFVBQVUsRUFBRSxFQUFFO1FBQ2pELE1BQU0sUUFBUSxHQUFHLEtBQUssQ0FBQyxTQUFTLENBQUMsTUFBTSxDQUFDLEdBQUcsRUFBRSxNQUFNLENBQUMsT0FBTyxDQUFDLENBQUM7UUFDN0QsTUFBTSxJQUFJLEdBQUcsSUFBSSxDQUFDLE9BQU8sQ0FBQyxNQUFNLENBQUMsTUFBTSxFQUFFLGFBQWEsQ0FBQyxDQUFDO1FBQ3hELElBQUksQ0FBQyxRQUFRLENBQUMsTUFBTSxFQUFFO1lBQ3BCLE9BQU8sRUFBRSxJQUFJLEVBQUUsQ0FBQztTQUNqQjtRQUVELElBQUksVUFBVSxHQUFhLEVBQUUsQ0FBQztRQUM5QixRQUFRLENBQUMsT0FBTyxDQUFDLENBQUMsQ0FBQyxFQUFFO1lBQ25CLE1BQU0sS0FBSyxHQUFHLElBQUksQ0FBQyxPQUFPLENBQUMsTUFBTSxDQUFDLEdBQUcsRUFBRSxDQUFDLENBQUMsQ0FBQztZQUUxQyxrQkFBa0I7WUFDbEIsSUFBSSxDQUFDLEtBQUssQ0FBQyxLQUFLLENBQUMsSUFBSSxNQUFNLENBQUMsSUFBSSxLQUFLLEtBQUssRUFBRTtnQkFDMUMsSUFBSSxXQUFXLEdBQUcsRUFBRSxDQUFDLFlBQVksQ0FBQyxLQUFLLENBQUMsQ0FBQyxRQUFRLEVBQUUsQ0FBQztnQkFDcEQsSUFBSSxPQUFPLENBQUM7Z0JBQ1osTUFBTSxJQUFJLEdBQWEsQ0FBQyxLQUFLLENBQUMsS0FBSyxDQUFDLEdBQUcsRUFBRSxDQUFDLENBQUM7Z0JBRTNDLE9BQU8sQ0FBQyxPQUFPLEdBQUcsV0FBVyxDQUFDLEtBQUssQ0FBQyxXQUFXLENBQUMsQ0FBQyxFQUFFO29CQUNqRCxNQUFNLFdBQVcsR0FBRyxPQUFPLENBQUMsQ0FBQyxDQUFDLENBQUM7b0JBQy9CLE1BQU0sV0FBVyxHQUFHLElBQUksQ0FBQyxPQUFPLENBQUMsVUFBVSxDQUFDLEdBQUcsRUFBRSxlQUFlLEdBQUcsV0FBVyxDQUFDLENBQUM7b0JBQ2hGLElBQUksRUFBRSxDQUFDLFVBQVUsQ0FBQyxXQUFXLENBQUMsRUFBRTt3QkFDOUIsSUFBSSxDQUFDLElBQUksQ0FBQyxXQUFXLENBQUMsQ0FBQzt3QkFDdkIsVUFBVSxDQUFDLElBQUksQ0FBQyxXQUFXLENBQUMsQ0FBQztxQkFDOUI7eUJBQU07d0JBQ0wsS0FBSyxDQUFDLGdDQUFnQyxFQUFFLFdBQVcsRUFBRSxVQUFVLENBQUMsR0FBRyxDQUFDLENBQUM7d0JBQ3JFLE9BQU87cUJBQ1I7b0JBRUQsV0FBVyxHQUFHLFdBQVcsQ0FBQyxTQUFTLENBQ2pDLE9BQU8sQ0FBQyxLQUFLLEdBQUcsT0FBTyxDQUFDLENBQUMsQ0FBQyxDQUFDLE1BQU0sQ0FDbEMsQ0FBQztpQkFDSDthQUNGO2lCQUFNO2dCQUNMLFVBQVUsR0FBRyxVQUFVLENBQUMsTUFBTSxDQUFDLEtBQUssQ0FBQyxLQUFLLENBQUMsQ0FBQyxDQUFDO2FBQzlDO1FBQ0gsQ0FBQyxDQUFDLENBQUM7UUFFSCxJQUFJLENBQUMsVUFBVSxDQUFDLE1BQU0sRUFBRTtZQUN0QixPQUFPLEVBQUUsSUFBSSxFQUFFLENBQUM7U0FDakI7UUFFRCxPQUFPO1lBQ0wsSUFBSTtZQUVKLDhCQUE4QjtZQUM5QixPQUFPLEVBQUUsS0FBSyxDQUFDLElBQUksQ0FBQyxJQUFJLEdBQUcsQ0FBQyxVQUFVLENBQUMsQ0FBQztpQkFDckMsR0FBRyxDQUFDLENBQUMsQ0FBQyxFQUFFLENBQUMsV0FBVyxDQUFDLElBQUksQ0FBQztpQkFDMUIsSUFBSSxDQUFDLElBQUksQ0FBQztTQUNkLENBQUM7SUFDSixDQUFDLENBQUMsQ0FBQztBQUNMLENBQUM7QUFuREQsNEJBbURDIn0=